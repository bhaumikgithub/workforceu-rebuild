generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                                Int                     @id @default(autoincrement())
  subdomain_id                      Int?
  first_name                        String?
  last_name                         String?
  user_name                         String?
  email                             String?
  password                          String?                 @db.Text
  original_password                 String?                 @db.Text
  mobile                            String?                 @db.VarChar(50)
  phone_number                      String?                 @db.VarChar(50)
  address                           String?                 @db.Text
  address_2                         String?                 @db.Text
  city                              String?                 @db.VarChar(75)
  state_id                          Int?
  country_id                        Int?
  zip_code                          String?                 @db.VarChar(20)
  time_zone_id                      Int?
  gender                            String?
  birth_date                        DateTime?
  fax                               String?                 @db.VarChar(50)
  email_verified_at                 DateTime?               @db.Timestamp(0)
  profile_headshot                  String?
  company_logo                      String?
  user_type                         UserTypes?
  owner_id                          Int?
  department_id                     Int?
  location_id                       Int?
  position                          String?                 @db.VarChar(75)
  pay_type                          PayType?
  review_date                       DateTime?
  reimbursement                     String?                 @db.VarChar(75)
  date_employed                     DateTime?
  hire_date                         DateTime?
  salary                            String?                 @db.VarChar(75)
  status                            UserStatus?             @default(active)
  remember_token                    String?                 @db.VarChar(100)
  account_type                      Int?
  reminder_messenger_emails         RemainderNotifications?
  reminder_task_notification_emails RemainderNotifications?
  last_login                        DateTime?
  created_at                        DateTime                @default(now())
  updated_at                        DateTime                @updatedAt
  deleted_at                        DateTime?

  @@index([subdomain_id])
  @@index([state_id])
  @@index([country_id])
  @@index([time_zone_id])
  @@index([department_id])
  @@index([location_id])
}

model subdomains {
  id              Int           @id @default(autoincrement())
  name            String?       @db.VarChar(255)
  domain          String?
  company_type_id Int?
  theme_config    String?       @db.VarChar(255)
  status          commonStatus?
  regular_hours   Int?
  week_start_day  Int?
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  deleted_at      DateTime?
}

model departments {
  id              Int          @id @default(autoincrement())
  subdomain_id    Int
  department_name String       @db.VarChar(255)
  status          commonStatus @default(active)
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  deleted_at      DateTime?

  @@index([subdomain_id])
}

model locations {
  id            Int          @id @default(autoincrement())
  subdomain_id  Int
  location_name String       @db.VarChar(255)
  status        commonStatus @default(active)
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  deleted_at    DateTime?

  @@index([subdomain_id])
}

model countries {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  status     commonStatus @default(active)
  created_at DateTime?    @db.DateTime(0)
  updated_at DateTime?    @db.DateTime(0)
  deleted_at DateTime?    @db.DateTime(0)
}

model states {
  id         Int          @id @default(autoincrement())
  country_id Int
  name       String
  status     commonStatus @default(active)
  created_at DateTime?    @db.Timestamp(0)
  updated_at DateTime?    @db.Timestamp(0)
  deleted_at DateTime?    @db.Timestamp(0)

  @@index([country_id])
}

model timezones {
  id         Int          @id @default(autoincrement())
  name       String?
  utc        String?
  status     commonStatus @default(active)
  created_at DateTime?    @db.Timestamp(0)
  updated_at DateTime?    @db.Timestamp(0)
  deleted_at DateTime?    @db.Timestamp(0)
}

model company_types {
  id          Int          @id @default(autoincrement())
  name        String       @db.Text
  description String       @db.LongText
  status      commonStatus @default(active)
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  deleted_at  DateTime?
}

model Subscription {
  id                          Int       @id @default(autoincrement())
  plan_id                     String?
  user_id                     Int?      @map("user_id")
  stripe_id                   String?   @map("subscription_id")
  subscription_start_date     DateTime? @map("subscription_start_date")
  subscription_end_date       DateTime? @map("subscription_end_date")
  employee_limit              String?   @map("employee_limit")
  stripe_customer_id          String?   @map("customer_id")
  coupan_id                   String?   @map("coupan_id")
  interval                    String?   @map("interval")
  plan_name                   String?   @map("plan_name")
  stripe_status               Boolean   @default(true) @map("is_active")
  invoice_id                  String?   @map("invoice_id")
  amount                      Float?    @default(0)
  last_payment_attempted_date DateTime? @map("last_payment_attempted_date")
  created_at                  DateTime  @default(now())
  updated_at                  DateTime  @updatedAt
  deleted_at                  DateTime?

  @@map("subscriptions")
}

model PaymentMethod {
  id                       Int       @id @default(autoincrement())
  user_id                  Int
  stripe_payment_method_id String    @map("stripe_payment_method_id")
  card_brand               String?   @map("card_brand")
  last_4                   String?   @map("card_last4")
  exp_month                Int?      @map("card_exp_month")
  exp_year                 Int?      @map("card_exp_year")
  created_at               DateTime  @default(now())
  updated_at               DateTime  @updatedAt
  deleted_at               DateTime?

  @@map("payment_methods")
}

model migrations {
  id         Int       @id @default(autoincrement())
  filename   String    @unique(map: "filename")
  applied_at DateTime? @default(now()) @db.Timestamp(0)

  @@map("_migrations")
}

model cities {
  id         Int           @id @default(autoincrement()) @db.UnsignedInt
  state_id   Int
  name       String
  status     cities_status @default(active)
  created_at DateTime?     @db.Timestamp(0)
  updated_at DateTime?     @db.Timestamp(0)
  deleted_at DateTime?     @db.Timestamp(0)

  @@index([state_id], map: "idx_state_id")
}

enum PayType {
  hourly
  flat_rate
}

enum UserStatus {
  active
  inactive
  terminate
  ban
}

enum commonStatus {
  active
  inactive
}

enum UserTypes {
  super_admin
  admin
  po_user
  so_user
}

enum RemainderNotifications {
  yes
  no
}

enum cities_status {
  active
  inactive
}
